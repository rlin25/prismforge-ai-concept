# PrismForge AI - Global NGINX Load Balancer Configuration
# This configuration provides global load balancing across multiple regions

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimize worker connections
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format with detailed information
    log_format main_detailed '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            'rt=$request_time uct="$upstream_connect_time" '
                            'uht="$upstream_header_time" urt="$upstream_response_time" '
                            'region="$upstream_addr" cache="$upstream_cache_status"';
    
    access_log /var/log/nginx/access.log main_detailed;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Client settings
    client_max_body_size 100M;
    client_body_buffer_size 1M;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml
        font/ttf
        font/opentype
        application/font-woff
        application/font-woff2;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=50r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn perip 10;
    
    # Real IP detection (for use behind CDN)
    set_real_ip_from 103.21.244.0/22;     # Cloudflare
    set_real_ip_from 103.22.200.0/22;     # Cloudflare
    set_real_ip_from 103.31.4.0/22;       # Cloudflare
    set_real_ip_from 104.16.0.0/13;       # Cloudflare
    set_real_ip_from 104.24.0.0/14;       # Cloudflare
    set_real_ip_from 108.162.192.0/18;    # Cloudflare
    set_real_ip_from 131.0.72.0/22;       # Cloudflare
    set_real_ip_from 141.101.64.0/18;     # Cloudflare
    set_real_ip_from 162.158.0.0/15;      # Cloudflare
    set_real_ip_from 172.64.0.0/13;       # Cloudflare
    set_real_ip_from 173.245.48.0/20;     # Cloudflare
    set_real_ip_from 188.114.96.0/20;     # Cloudflare
    set_real_ip_from 190.93.240.0/20;     # Cloudflare
    set_real_ip_from 197.234.240.0/22;    # Cloudflare
    set_real_ip_from 198.41.128.0/17;     # Cloudflare
    set_real_ip_from 2400:cb00::/32;      # Cloudflare IPv6
    set_real_ip_from 2606:4700::/32;      # Cloudflare IPv6
    set_real_ip_from 2803:f800::/32;      # Cloudflare IPv6
    set_real_ip_from 2405:b500::/32;      # Cloudflare IPv6
    set_real_ip_from 2405:8100::/32;      # Cloudflare IPv6
    set_real_ip_from 2c0f:f248::/32;      # Cloudflare IPv6
    set_real_ip_from 2a06:98c0::/29;      # Cloudflare IPv6
    real_ip_header CF-Connecting-IP;
    real_ip_recursive on;
    
    # Map for region detection based on Cloudflare headers
    map $http_cf_ipcountry $region {
        default "us-east-1";
        ~^(US|CA|MX)$ "us-east-1";
        ~^(GB|IE|FR|DE|IT|ES|NL|BE|AT|CH|SE|NO|DK|FI)$ "eu-west-1";
        ~^(JP|KR|CN|TW|HK|SG|MY|TH|ID|PH|VN|IN)$ "ap-northeast-1";
        ~^(AU|NZ)$ "ap-southeast-2";
        ~^(BR|AR|CL|CO|PE|VE|UY|PY|BO|EC|GY|SR|GF)$ "sa-east-1";
    }
    
    # Upstream definitions for different regions
    upstream prismforge_us_east {
        least_conn;
        server prismforge-us-east-1.internal:80 max_fails=3 fail_timeout=30s weight=100;
        server prismforge-us-east-2.internal:80 max_fails=3 fail_timeout=30s weight=100;
        server prismforge-us-east-3.internal:80 max_fails=3 fail_timeout=30s weight=50 backup;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    upstream prismforge_eu_west {
        least_conn;
        server prismforge-eu-west-1.internal:80 max_fails=3 fail_timeout=30s weight=100;
        server prismforge-eu-west-2.internal:80 max_fails=3 fail_timeout=30s weight=100;
        server prismforge-us-east-1.internal:80 max_fails=3 fail_timeout=30s weight=20 backup;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    upstream prismforge_ap_northeast {
        least_conn;
        server prismforge-ap-northeast-1.internal:80 max_fails=3 fail_timeout=30s weight=100;
        server prismforge-ap-northeast-2.internal:80 max_fails=3 fail_timeout=30s weight=100;
        server prismforge-us-east-1.internal:80 max_fails=3 fail_timeout=30s weight=20 backup;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    upstream prismforge_ap_southeast {
        least_conn;
        server prismforge-ap-southeast-1.internal:80 max_fails=3 fail_timeout=30s weight=100;
        server prismforge-ap-southeast-2.internal:80 max_fails=3 fail_timeout=30s weight=100;
        server prismforge-ap-northeast-1.internal:80 max_fails=3 fail_timeout=30s weight=20 backup;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    upstream prismforge_sa_east {
        least_conn;
        server prismforge-sa-east-1.internal:80 max_fails=3 fail_timeout=30s weight=100;
        server prismforge-us-east-1.internal:80 max_fails=3 fail_timeout=30s weight=50 backup;
        keepalive 16;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # Map region to upstream
    map $region $backend {
        us-east-1 prismforge_us_east;
        eu-west-1 prismforge_eu_west;
        ap-northeast-1 prismforge_ap_northeast;
        ap-southeast-2 prismforge_ap_southeast;
        sa-east-1 prismforge_sa_east;
        default prismforge_us_east;
    }
    
    # Cache zones
    proxy_cache_path /var/cache/nginx/global 
                     levels=1:2 
                     keys_zone=global_cache:100m 
                     max_size=10g 
                     inactive=60m 
                     use_temp_path=off;
    
    proxy_cache_path /var/cache/nginx/api 
                     levels=1:2 
                     keys_zone=api_cache:50m 
                     max_size=1g 
                     inactive=10m 
                     use_temp_path=off;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # CSP header
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; img-src 'self' data: https:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https:; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
    
    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name prismforge-ai.com www.prismforge-ai.com;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name prismforge-ai.com www.prismforge-ai.com;
        
        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/prismforge-ai.crt;
        ssl_certificate_key /etc/nginx/ssl/prismforge-ai.key;
        ssl_trusted_certificate /etc/nginx/ssl/prismforge-ai-chain.crt;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # Root directory
        root /var/www/html;
        index index.html;
        
        # Global rate limiting
        limit_req zone=general burst=100 nodelay;
        
        # Custom headers for debugging
        add_header X-Region $region always;
        add_header X-Backend $backend always;
        add_header X-Cache-Status $upstream_cache_status always;
        
        # Health check endpoint
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Nginx status (restrict access)
        location = /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # API endpoints with caching and rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # API-specific caching
            proxy_cache api_cache;
            proxy_cache_key "$scheme$request_method$host$request_uri$http_authorization";
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache $http_cache_control;
            
            # Health check caching
            location /api/health {
                proxy_cache api_cache;
                proxy_cache_valid 200 30s;
                proxy_cache_key "$scheme$request_method$host$request_uri";
            }
            
            # Authentication endpoints - no caching, strict rate limiting
            location ~ ^/api/auth/ {
                limit_req zone=login burst=5 nodelay;
                proxy_cache off;
                proxy_no_cache 1;
                proxy_cache_bypass 1;
            }
            
            # Proxy settings
            proxy_pass http://$backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Region $region;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # Static assets with aggressive caching
        location /_next/static/ {
            proxy_cache global_cache;
            proxy_cache_valid 200 30d;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Public assets
        location /public/ {
            proxy_cache global_cache;
            proxy_cache_valid 200 7d;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            expires 7d;
            add_header Cache-Control "public";
            
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Fonts with long caching
        location ~* \.(woff|woff2|ttf|eot)$ {
            proxy_cache global_cache;
            proxy_cache_valid 200 30d;
            
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Images with caching
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            proxy_cache global_cache;
            proxy_cache_valid 200 7d;
            
            expires 7d;
            add_header Cache-Control "public";
            
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Block certain file types
        location ~* \.(sql|log|env|ini|conf)$ {
            deny all;
            return 404;
        }
        
        # Block hidden files
        location ~ /\. {
            deny all;
            return 404;
        }
        
        # Main application routes
        location / {
            proxy_cache global_cache;
            proxy_cache_valid 200 302 5m;
            proxy_cache_key "$scheme$request_method$host$request_uri$http_accept_encoding";
            proxy_cache_bypass $cookie_nocache $arg_nocache;
            
            proxy_pass http://$backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Region $region;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Handle errors
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 30s;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /var/www/errors;
            internal;
        }
        
        location = /50x.html {
            root /var/www/errors;
            internal;
        }
    }
    
    # Separate server block for API subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.prismforge-ai.com;
        
        # SSL Configuration (same as main server)
        ssl_certificate /etc/nginx/ssl/prismforge-ai.crt;
        ssl_certificate_key /etc/nginx/ssl/prismforge-ai.key;
        ssl_trusted_certificate /etc/nginx/ssl/prismforge-ai-chain.crt;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # Rate limiting for API
        limit_req zone=api burst=50 nodelay;
        
        # Add CORS headers for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Expose-Headers "Content-Length, Content-Range" always;
        add_header Access-Control-Max-Age "1728000" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        # API routes
        location / {
            proxy_pass http://$backend/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Region $region;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}